openapi: 3.0.0
servers:
  - description: APIHub API Auto Mocking DCS case administration APIs
    url: https://virtserver.swaggerhub.com/HMCTS-DTS/api-dcs-crime-caseadmin/0.0.0
info:
  version: 0.0.0
  title: Digital Case System (DCS) case administration APIs
  description: DCS Case Administration API Specification
  contact:
    email: no-reply@hmcts.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
components:
  securitySchemes:
    BearerAuth:
      description: Valid Bearer Token
      type: http
      scheme: bearer
  schemas:
    uuid:
      type: string
      pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
    datePattern:
      type: string
      pattern: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
    defendantPerson:
      description: 'Individual representing the defendant'
      type: object
      properties:
        forename:
          type: string
          description: Given Name
          maxLength: 35
        middleName:
          type: string
          description: Middle name
          maxLength: 35
        surname:
          type: string
          description: Surname or Family name
          maxLength: 35
        dateOfBirth:
          allOf:
            - $ref: '#/components/schemas/datePattern'
            - description: "Defendant's date of birth"
      required:
        - forename
        - surname
        - dateOfBirth
    defendantOrganisation:
      description: 'Organisation representing the defendant'
      type: object
      properties:
        name:
          type: string
          description: Name of an organisation, e.g., Marks and Spencer.
          maxLength: 255
      required:
        - organisationName
    defendant:
      type: object
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: "Unique identifier to track the ID of the defendant on the external system"
        bailStatus:
          type: string
          description: "Bail status of the defendant"
        interpreterLanguage:
          type: string
          description: "Language required from the interpreter"
        interpreterInformation:
          type: string
          description: "Additional notes pertaining to interpreter"
        defendantPerson:
          $ref: '#/components/schemas/defendantPerson'
        defendantOrganisation:
          $ref: '#/components/schemas/defendantOrganisation'
      required:
        - id
        - bailStatus
        - oneOf
          - defendantPerson
          - defendantOrganisation
    requestFulfilledResponsePayload:
      description: 'Payload representing the response from the synchronous API call'
      type: object
      properties:
        transactionRef:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: "Unique identifier to track the specific message payload"
        caseId:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: "Unique identifier to track the ID of the case on the CP system"
        caseReferral:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: "Unique identifier to track the ID of the case on the external system"
        defendants:
          type: array
          items:
            type: object
            properties:
              defendantId:
                allOf:
                  - $ref: '#/components/schemas/uuid'
                  - description: "Unique identifier to track the ID of the defendant on the CP system"
              defendantReferral:
                allOf:
                  - $ref: '#/components/schemas/uuid'
                  - description: "Unique identifier to track the ID of the defendant on the DCS system"
            required:
              - defendantId
              - defendantReferral
      required:
        - transactionRef
        - caseId
        - caseReferral
        - defendants
    errorResponsePayload:
      description: 'Payload representing the error response from the synchronous API call'
      type: object
      properties:
        transactionRef:
          allOf:
            - $ref: '#/components/schemas/uuid'
            - description: "Unique identifier to track the specific message payload"
        errorCode:
          type: string
          enum:
            - "CASE_ALREADY_EXISTS"
            - "DEFENDANT_ALREADY_EXISTS"
            - "CASE_NOT_FOUND"
            - "DEFENDANT_NOT_FOUND"
            - "CASE_NOT_CREATED"
            - "DEFENDANT_NOT_CREATED"
            - "DEFENDANT_NOT_UPDATED"
          description: "Error code if the request failed"
        errorMessage:
          type: string
          description: "Additional detail information about the error"
          maxLength: 255
      required:
        - transactionRef
        - errorCode
        - errorMessage

paths:
  /case/{caseUrn}/defendants:
    post:
      summary: Submit case and defendant details
      description: Sending case and defendant information
      operationId: linkCaseAndDefendant
      tags:
        - Case and defendant details
      parameters:
        - in: path
          name: caseUrn
          description: The unique reference number identifying a case
          schema:
            type: string
          required: true
      requestBody:
        description: Case and defendant details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionRef:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the specific message payload"
                caseId:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the ID of the case on the external system"
                caseReferral:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the ID of the case on the DCS system.  If this attribute is not supplied, DCS will infer it as a request to create the case file.  If this attribute is not present and case file exists on DCS, DCS will fail the request and provide an appropriate error message"
                prosecutedBy:
                  type: string
                  description: "Prosecution Authority"
                courtHouse:
                  type: string
                  description: "Hearing venue"
                hearingDate:
                  allOf:
                    - $ref: '#/components/schemas/datePattern'
                    - description: "Hearing date"
                defendants:
                  type: array
                  items:
                    $ref: '#/components/schemas/defendant'
              required:
                - transactionRef
                - caseId
                - prosecutedBy
                - courtHouse
                - defendants
            example:
              transactionRef: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905483'
              caseId: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
              prosecutedBy: 'CPS'
              courtHouse: 'Southwark'
              hearingDate: '2025-01-21'
              defendants:
                - id: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905485'
                  bailStatus: 'REMAND'
                  interpreterLanguage: 'Urdu'
                  interpreterInformation: "Random notes"
                  defendantPerson:
                    forename: 'John'
                    middleName: 'Theodore'
                    surname: 'SMITH'
                    dateOfBirth: '1970-02-03'
      responses:
        '201':
          description: Created. Case and defendant details successfully created and linked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requestFulfilledResponsePayload'
              examples:
                linkedCaseAndDefendant:
                  value:
                    transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                    caseId: '8191c165-e9e4-4fd7-ac6d-5bfd04690f78'
                    caseReferral: '8191c165-e9e4-4fd7-ac6d-5bfd04690f79'
                    defendants:
                      - defendantId: '8191c165-e9e4-4fd7-ac6d-5bfd04690f80'
                        defendantReferral: '8191c165-e9e4-4fd7-ac6d-5bfd04690f81'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponsePayload'
              examples:
                caseExists:
                  value:
                    transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                    errorCode: 'CASE_ALREADY_EXISTS'
                    errorMessage: 'Case already exists'
                defExists:
                  value:
                    transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                    errorCode: 'DEFENDANT_ALREADY_EXISTS'
                    errorMessage: 'Defendant already exists'

  /case/{caseUrn}/defendant/{defendantReferral}:
    post:
      summary: Send updated defendant details
      description: Sending updated defendant information
      operationId: updateDefendantDetails
      tags:
        - Case and defendant details
      parameters:
        - in: path
          name: caseUrn
          description: The unique reference number identifying a case
          schema:
            type: string
          required: true
        - in: path
          name: defendantReferral
          description: The referral value identifying defendant in target system
          schema:
            type: string
          required: true
      requestBody:
        description: Defendant details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionRef:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the specific message payload"
                caseId:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the ID of the case on the CP system"
                caseReferral:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the ID of the case on the DCS system"
                defendant:
                  $ref: '#/components/schemas/defendant'
              required:
                - transactionRef
                - caseId
                - caseReferral
                - defendant
            example:
              transactionRef: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905483'
              caseId: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
              caseReferral: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
              defendant:
                id: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905485'
                bailStatus: 'REMAND'
                interpreterLanguage: 'Urdu'
                interpreterInformation: "Random notes"
                defendantPerson: {
                  forename: "John",
                  middleName: "Theodore",
                  surname: "SMITH",
                  dateOfBirth: "1972-02-03"
                }
      responses:
        '204':
          description: Response indicating that the defendant details were successfully updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponsePayload'
              example:
                transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                errorCode: 'CASE_NOT_FOUND'
                errorMessage: 'Case ID not valid'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponsePayload'
              examples:
                caseDoesNotExist:
                  value:
                    transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                    errorCode: 'CASE_NOT_FOUND'
                    errorMessage: 'Case not found'
                defDoesNotExist:
                  value:
                    transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                    errorCode: 'DEFENDANT_NOT_FOUND'
                    errorMessage: 'Defendant not found'


  /case/{caseUrn}/defendant/{defendantReferral}/defenceRepresentation:
    post:
      summary: Add defence representation
      description: Adding defence representation
      operationId: updateDefendantRepresentation
      tags:
        - Defence details for defendant
      parameters:
        - in: path
          name: caseUrn
          description: The unique reference number identifying a case
          schema:
            type: string
          required: true
        - in: path
          name: defendantReferral
          description: The referral value identifying defendant in target system
          schema:
            type: string
          required: true
      requestBody:
        description: Defence representation
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionRef:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the specific message payload"
                caseId:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the ID of the case on the external system"
                action:
                  type: string
                  enum:
                    - "CREATE"
                    - "UPDATE"
                    - "DELETE"
                  description: "Create, Update or Delete defence representation"
                  maxLength: 10
                defenceRepresentation:
                  type: object
                  description: Representation details for the defendant
                  properties:
                    organisationName:
                      type: string
                      description: Name of the organisation
                      maxLength: 50
                    forename:
                      type: string
                      description: Given Name
                      maxLength: 50
                    surname:
                      type: string
                      description: Surname or Family name
                      maxLength: 50
                    email:
                      type: string
                      description: email address (check on CP to see if its available)
                      maxLength: 100
                  required:
                    - organisationName
                    - email
              required:
                - transactionRef
                - caseId
                - action
                - defenceRepresentation
            example:
              transactionRef: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905483'
              caseId: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
              action: "CREATE"
              defenceRepresentation:
                {
                  organisationName: "Ted & Co LLP",
                  email: "jane@gmail.com"
                }

      responses:
        '204':
          description: Success. Defence representation added or updated or removed
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponsePayload'
              examples:
                caseDoesNotExist:
                  value:
                    transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                    errorCode: 'CASE_NOT_FOUND'
                    errorMessage: 'Case not found'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponsePayload'
              examples:
                caseDoesNotExist:
                  value:
                    transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                    errorCode: 'CASE_NOT_FOUND'
                    errorMessage: 'Case not found'
                defDoesNotExists:
                  value:
                    transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f77'
                    errorCode: 'DEFENDANT_NOT_FOUND'
                    errorMessage: 'Defendant not found'


  /case/{caseUrn}/material:
    post:
      summary: Submit material
      description: Upload a document and associate it with an existing case and (optionally) defendant
      operationId: addCaseMaterial
      tags:
        - Submit material
      parameters:
        - in: path
          name: caseUrn
          description: The unique reference number identifying a case
          schema:
            type: string
          required: true
      requestBody:
        description: Case Material Details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                caseReferral:
                  type: string
                  description: "referral link to the case"
                defendantReferral:
                  type: string
                  description: "referral link to the defendant"
                transactionRef:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the specific message payload "
                caseId:
                  allOf:
                    - $ref: '#/components/schemas/uuid'
                    - description: "Unique identifier to track the ID of the case on the external system"
                materialUrl:
                  type: string
                  description: "Link to material stored in azure storage container"
                documentName:
                  type: string
                  description: "Document Name in source system "
                documentDate:
                  allOf:
                    - $ref: '#/components/schemas/datePattern'
                    - description: "date document was first uploaded into SOURCE system "
                uploadedByUser:
                  type: string
                  description: "User id of person or system requesting the upload to DCS "
                defendantId:
                  type: string
                  description: "An optional reference to the identity of the defendant within this prosecution case indicating this should be attached at the defendant level "
                documentSection:
                  type: string
                  description: "The document section from within the SOURCE system "
              required:
                - caseReferral
                - transactionRef
                - caseId
                - materialUrl
                - documentName
                - documentSection
                - uploadedByUser
            example:
              caseId: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
              caseReferral: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905483'
              transactionRef: 'd9fe4c51-1783-4fe4-a2b4-7c0e25905484'
              materialUrl: 'https://azure.storage.com/some-material-reference'
              documentName: 'Test file.pdf'
              documentDate: '2025-01-01'
              uploadedByUser: 'Common Platform'
              documentSection: 'Exhibits'

      responses:
        '202':
          description: Accepted material submission for processing
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponsePayload'
              example:
                transactionRef: '8191c165-e9e4-4fd7-ac6d-5bfd04690f74'
                errorCode: 'CASE_NOT_FOUND'
                errorMessage: 'Case ID not valid'